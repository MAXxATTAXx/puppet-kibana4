# kibana configuration for 4.2. For a complete list of options please refer to:
# https://www.elastic.co/guide/en/kibana/current/kibana-server-properties.html

# Kibana is served by a back end server. This controls which port to use.
server.port: <%= scope.lookupvar('kibana4::server_port') %>

# The host to bind the server to.
server.host: "<%= scope.lookupvar('kibana4::server_host') %>"

# A value to use as a XSRF token. This token is sent back to the server on each request
# and required if you want to execute requests from other clients (like curl).
<% unless scope.lookupvar('kibana4::server_xsrf_token').nil? -%>
server.xsrf.token: "<%= scope.lookupvar('kibana4::server_xsrf_token') %>"
<% end -%>

# If you are running kibana behind a proxy, and want to mount it at a path,
# specify that path here. The basePath can't end in a slash.
<% unless scope.lookupvar('kibana4::server_base_path').nil? -%>
server.basePath: "<%= scope.lookupvar('kibana4::server_base_path') %>"
<% end -%>

# The Elasticsearch instance to use for all your queries.
elasticsearch.url: "<%= scope.lookupvar('kibana4::elasticsearch_url') %>"

# preserve_elasticsearch_host true will send the hostname specified in 
# `elasticsearch`. If you set it to false,
# then the host you use to connect to *this* Kibana instance will be sent.
elasticsearch.preserveHost: <%= scope.lookupvar('kibana4::elasticsearch_preserve_host') %>

# Kibana uses an index in Elasticsearch to store saved searches, visualizations
# and dashboards. It will create a new index if it doesn't already exist.
kibana.index: "<%= scope.lookupvar('kibana4::kibana_index') %>"

# The default application to load.
kibana.defaultAppId: "<%= scope.lookupvar('kibana4::kibana_default_app_id') %>"

# If your Elasticsearch is protected with basic auth, these are the user credentials
# used by the Kibana server to perform maintenance on the kibana_index at startup. Your Kibana
# users will still need to authenticate with Elasticsearch (which is proxied through
# the Kibana server)
<% unless scope.lookupvar('kibana4::elasticsearch_username').nil? -%>
elasticsearch.username: "<%= scope.lookupvar('kibana4::elasticsearch_username') %>"
<% end -%>
<% unless scope.lookupvar('kibana4::elasticsearch_password').nil? -%>
elasticsearch.password: "<%= scope.lookupvar('kibana4::elasticsearch_password') %>"
<% end -%>

# SSL for outgoing requests from the Kibana Server to the browser (PEM formatted)
<% unless scope.lookupvar('kibana4::server_ssl_cert').nil? -%>
server.ssl.cert: "<%= scope.lookupvar('kibana4::server_ssl_cert') %>"
<% end -%>
<% unless scope.lookupvar('kibana4::server_ssl_key').nil? -%>
server.ssl.key: "<%= scope.lookupvar('kibana4::server_ssl_key') %>"
<% end -%>

# Optional setting to validate that your Elasticsearch backend uses the same key
# files (PEM formatted)
<% unless scope.lookupvar('kibana4::elasticsearch_ssl_cert').nil? -%>
elasticsearch.ssl.cert: "<%= scope.lookupvar('kibana4::elasticsearch_ssl_cert') %>"
<% end -%>
<% unless scope.lookupvar('kibana4::elasticsearch_ssl_key').nil? -%>
elasticsearch.ssl.key: "<%= scope.lookupvar('kibana4::elasticsearch_ssl_key') %>"
<% end -%>

# If you need to provide a CA certificate for your Elasticsearch instance, put
# the path of the pem file here.
<% unless scope.lookupvar('kibana4::elasticsearch_ssl_ca').nil? -%>
elasticsearch.ssl.ca: "<%= scope.lookupvar('kibana4::elasticsearch_ssl_ca') %>"
<% end -%>

# Set to false to have a complete disregard for the validity of the SSL
# certificate.
elasticsearch.ssl.verify: <%= scope.lookupvar('kibana4::elasticsearch_ssl_verify') %>

# Time in milliseconds to wait for elasticsearch to respond to pings, defaults to
# request_timeout setting
elasticsearch.pingTimeout: <%= scope.lookupvar('kibana4::elasticsearch_ping_timeout') %>

# Time in milliseconds to wait for responses from the back end or elasticsearch.
# This must be > 0
elasticsearch.requestTimeout: <%= scope.lookupvar('kibana4::elasticsearch_request_timeout') %>

# Time in milliseconds for Elasticsearch to wait for responses from shards.
# Set to 0 to disable.
elasticsearch.shardTimeout: <%= scope.lookupvar('kibana4::elasticsearch_shard_timeout') %>

# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying
elasticsearch.startupTimeout: <%= scope.lookupvar('kibana4::elasticsearch_startup_timeout') %>

# Set the path to where you would like the process id file to be created.
pid.file: "<%= scope.lookupvar('kibana4::pid_file') %>"

# If you would like to send the log output to a file you can set the path below.
logging.dest: "<%= scope.lookupvar('kibana4::logging_dest') %>"

# Set this to true to suppress all logging output.
logging.silent: <%= scope.lookupvar('kibana4::logging_silent') %>

# Set this to true to suppress all logging output except for error messages.
logging.quiet: <%= scope.lookupvar('kibana4::logging_quiet') %>

# Set this to true to log all events, including system usage information and all requests.
logging.verbose: <%= scope.lookupvar('kibana4::logging_verbose') %>

# You can specify a map of log types to output tags for this parameter to create 
# a customized set of loggable events, as in the following example:
# {
#   log: ['info', 'warning', 'error', 'fatal'],
#   response: '*',
#   error: '*'
# }
logging.events = <%= scope.lookupvar('kibana4::logging_events') %>