# Kibana is served by a back end server. This controls which port to use.
server.port: <%= scope.lookupvar('kibana4::port') %>

# The host to bind the server to.
server.host: "<%= scope.lookupvar('kibana4::host') %>"

# A value to use as a XSRF token. This token is sent back to the server on each request
# and required if you want to execute requests from other clients (like curl).
# server.xsrf.token: ""

# If you are running kibana behind a proxy, and want to mount it at a path,
# specify that path here. The basePath can't end in a slash.
# server.basePath: ""

# The Elasticsearch instance to use for all your queries.
elasticsearch.url: "<%= scope.lookupvar('kibana4::elasticsearch_url') %>"

# preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,
# then the host you use to connect to *this* Kibana instance will be sent.
elasticsearch.preserveHost: <%= scope.lookupvar('kibana4::elasticsearch_preserve_host') %>

# Kibana uses an index in Elasticsearch to store saved searches, visualizations
# and dashboards. It will create a new index if it doesn't already exist.
kibana.index: "<%= scope.lookupvar('kibana4::kibana_index') %>"

# The default application to load.
kibana.defaultAppId: "<%= scope.lookupvar('kibana4::default_app_id') %>"

# If your Elasticsearch is protected with basic auth, these are the user credentials
# used by the Kibana server to perform maintenance on the kibana_index at startup. Your Kibana
# users will still need to authenticate with Elasticsearch (which is proxied through
# the Kibana server)
<% unless scope.lookupvar('kibana4::elasticsearch_username').nil? %>
elasticsearch.username: "<%= scope.lookupvar('kibana4::elasticsearch_username') %>"
<% else %>
# elasticsearch.username: "user"
<% end %>
<% unless scope.lookupvar('kibana4::elasticsearch_password').nil? %>
elasticsearch.password: "<%= scope.lookupvar('kibana4::elasticsearch_password') %>"
<% else %>
# elasticsearch.password: "pass"
<% end %>


# Time in milliseconds to wait for responses from the back end or elasticsearch.
# This must be > 0
elasticsearch.requestTimeout: <%= scope.lookupvar('kibana4::request_timeout') %>

# Time in milliseconds for Elasticsearch to wait for responses from shards.
# Set to 0 to disable.
elasticsearch.shardTimeout: <%= scope.lookupvar('kibana4::shard_timeout') %>

# Set to false to have a complete disregard for the validity of the SSL
# certificate.
verify_ssl: <%= scope.lookupvar('kibana4::verify_ssl') %>

# If you need to provide a CA certificate for your Elasticsarech instance, put
# the path of the pem file here.
# ca: <%= scope.lookupvar('kibana4::ca') %>

# SSL for outgoing requests from the Kibana Server (PEM formatted)
# ssl_key_file: <%= scope.lookupvar('kibana4::ssl_key_file') %>
# ssl_cert_file: <%= scope.lookupvar('kibana4::ssl_cert_file') %>

# Set the path to where you would like the process id file to be created.
# pid_file: <%= scope.lookupvar('kibana4::pid_file') %>


# Plugins that are included in the build, and no longer found in the plugins/ folder
bundled_plugin_ids:
 - <%= scope.lookupvar('kibana4::bundled_plugin_ids').join("\n - ") %>
